pipeline {
    agent any

    stages {
        stage('clone') {
            steps {
             git branch: 'main', url: 'https://github.com/bhanukumari/php-terraform.git' 
            }
        }
        stage('terraform init') {
            steps {
               dir ('php-terraform/terraform/php'){
                script {
                   sh 'terraform init'
                }
             }
            }
        }
         stage('terraform validate') {
            steps {
               dir ('php-terraform/terraform/php'){
                script {
                   sh 'terraform validate'
                }
             }
            }
        }
         stage('terraform plan') {
            steps {
               dir ('php-terraform/terraform/php'){
                script {
                   sh 'terraform plan'
                }
             }
            }
        }
         stage('Apply') {
                steps {  
                    timeout(time: 300, unit: 'SECONDS') {
 
                     script {                  
                    def USER_INPUT = input(
                    message: 'Please select the required input',
                    parameters: [
                            [$class: 'ChoiceParameterDefinition',
                             choices: ['Nothing','Apply','Destroy'].join('\n'),
                             name: 'input',
                             description: 'Menu - select box option']
                    ]
                    )

                    echo "The answer is: ${USER_INPUT}"

                    if( "${USER_INPUT}" == "Apply"){
                        //do something
                        terraform apply -auto-approve
                    } else if( "${USER_INPUT}" == "Destroy") {
                        //do something else
                       terraform destroy -auto-approve
                    } else {
                        
                            }
                        
                    
                }
                    }
            }
            }
    }
}
